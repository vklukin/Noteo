openapi: 3.0.3

info:
    title: Noteo API
    description: Api for working with notes
    version: 1.0.0

servers:
    - url: http://localhost:2000

tags:
    - name: Authorization
    - name: Notes

paths:
    /auth/login:
        post:
            tags:
                - "Authorization"
            summary: Giving access to a personal account
            requestBody:
                required: true
                $ref: "#/components/requestBodies/login"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: number
                                        example: 1
                                    token:
                                        type: string
                                        example: sd;lvihasvoihasdvouahspdvopihsadv
                                    email:
                                        type: string
                                        example: example@ex.ex
                    description: User is logged in
    /auth/registration:
        post:
            tags:
                - "Authorization"
            summary: Create account in the system
            requestBody:
                required: true
                $ref: "#/components/requestBodies/registration"
            responses:
                "200":
                    description: User has create the account
    /api/notes?userId={USER_ID}:
        get:
            tags:
                - "Notes"
            summary: Return all notes that user has
            parameters:
                - in: path
                  schema:
                      type: string
                  name: User id
                  required: true
                - in: header
                  schema:
                      type: string
                  name: Authorization token
                  description: "Authorization: Bearer <token>"
                  required: true
            responses:
                "200":
                    description: Return notes
                    $ref: "#/components/responses/allNotes"
    /api/notes/<id>?userId=<USER_ID>:
        delete:
            tags:
                - "Notes"
            summary: Deletes a note by its ID
            parameters:
                - in: header
                  schema:
                      type: string
                  name: Authorization token
                  description: "Authorization: Bearer <token>"
                  required: true
            responses:
                "200":
                    description: Note successfull removed
    /api/notes?userId=<USER_ID>:
        post:
            tags:
                - "Notes"
            summary: Creates new note
            parameters:
                - in: header
                  schema:
                      type: string
                  name: Authorization token
                  description: "Authorization: Bearer <token>"
                  required: true
                - in: path
                  schema:
                      type: string
                  name: User id
                  required: true
            responses:
                "200":
                    description: Creates new note
    /api/notes/<noteId>?userId=<USER_ID>:
        get:
            tags:
                - "Notes"
            summary: Gives solo note for user
            parameters:
                - in: header
                  schema:
                      type: string
                  name: Authorization token
                  description: "Authorization: Bearer <token>"
                  required: true
                - in: path
                  schema:
                      type: string
                  name: User id
                  required: true
            responses:
                "200":
                    description: Gives note for user
    /api/notes/<note_id>?userId=<USER_ID>:
        put:
            tags:
                - "Notes"
            summary: Changing data of the note
            parameters:
                - in: header
                  schema:
                      type: string
                  name: Authorization token
                  description: "Authorization: Bearer <token>"
                  required: true
                - in: path
                  schema:
                      type: string
                  name: User id
                  required: true
            responses:
                "200":
                    description: Changing the note data

components:
    requestBodies:
        login:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            email:
                                type: string
                                example: example@example.ex
                            password:
                                type: string
                                example: password
        registration:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            email:
                                type: string
                                example: example@example.ex
                            password:
                                type: string
                                example: password
    responses:
        allNotes:
            description: Note schema
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            type: object
                            properties:
                                id:
                                    type: number
                                    example: 1
                                title:
                                    type: string
                                    example: title
                                content:
                                    type: string
                                    example: content
